var Tx = require('ethereumjs-tx').Transaction;
const Web3 = require('web3');

// initialize web3 with provider
const providerURL = process.env.PROVIDER_URL;
const web3 = new Web3(providerURL);

// buffer private key
const account1 = process.env.ACCOUNT_ADDRESS;
const key_str = process.env.PRIVATE_KEY;
const sub_key = key_str.substring(2);
const privateKey1 = Buffer.from(sub_key, 'hex');

web3.eth.getTransactionCount(account1, (err, txCount) => {
    // smart contract data (compiled using remix.ethereum.org)
    const data = '0x608060405234801561001057600080fd5b50610ec0806100206000396000f3fe60806040526004361061004a5760003560e01c8063155dd5ee1461004f578063973900a0146100785780639baceb86146100b5578063a26759cb146100de578063d4cf547b146100e8575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610868565b610111565b005b34801561008457600080fd5b5061009f600480360381019061009a91906109db565b610245565b6040516100ac9190610a33565b60405180910390f35b3480156100c157600080fd5b506100dc60048036038101906100d79190610aac565b610341565b005b6100e661048b565b005b3480156100f457600080fd5b5061010f600480360381019061010a9190610b1b565b610565565b005b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415610199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019090610be7565b60405180910390fd5b6000829050818311156101aa578190505b80826101b69190610c36565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561023f573d6000803e3d6000fd5b50505050565b6000806000836040516102589190610ce4565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f090610be7565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a690610d47565b60405180910390fd5b600080846040516103c09190610ce4565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083816104419190610c36565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415610513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050a90610be7565b60405180910390fd5b348161051f9190610d67565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca90610d47565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166000846040516105fa9190610ce4565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067790610e09565b60405180910390fd5b816000846040516106919190610ce4565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061073092919061077b565b506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b82805461078790610e58565b90600052602060002090601f0160209004810192826107a957600085556107f0565b82601f106107c257805160ff19168380011785556107f0565b828001600101855582156107f0579182015b828111156107ef5782518255916020019190600101906107d4565b5b5090506107fd9190610801565b5090565b5b8082111561081a576000816000905550600101610802565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61084581610832565b811461085057600080fd5b50565b6000813590506108628161083c565b92915050565b60006020828403121561087e5761087d610828565b5b600061088c84828501610853565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108e88261089f565b810181811067ffffffffffffffff82111715610907576109066108b0565b5b80604052505050565b600061091a61081e565b905061092682826108df565b919050565b600067ffffffffffffffff821115610946576109456108b0565b5b61094f8261089f565b9050602081019050919050565b82818337600083830152505050565b600061097e6109798461092b565b610910565b90508281526020810184848401111561099a5761099961089a565b5b6109a584828561095c565b509392505050565b600082601f8301126109c2576109c1610895565b5b81356109d284826020860161096b565b91505092915050565b6000602082840312156109f1576109f0610828565b5b600082013567ffffffffffffffff811115610a0f57610a0e61082d565b5b610a1b848285016109ad565b91505092915050565b610a2d81610832565b82525050565b6000602082019050610a486000830184610a24565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7982610a4e565b9050919050565b610a8981610a6e565b8114610a9457600080fd5b50565b600081359050610aa681610a80565b92915050565b600080600060608486031215610ac557610ac4610828565b5b600084013567ffffffffffffffff811115610ae357610ae261082d565b5b610aef868287016109ad565b9350506020610b0086828701610853565b9250506040610b1186828701610a97565b9150509250925092565b600080600060608486031215610b3457610b33610828565b5b600084013567ffffffffffffffff811115610b5257610b5161082d565b5b610b5e868287016109ad565b9350506020610b6f86828701610a97565b9250506040610b8086828701610a97565b9150509250925092565b600082825260208201905092915050565b7f696e76616c6964206163636f756e742100000000000000000000000000000000600082015250565b6000610bd1601083610b8a565b9150610bdc82610b9b565b602082019050919050565b60006020820190508181036000830152610c0081610bc4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c4182610832565b9150610c4c83610832565b925082821015610c5f57610c5e610c07565b5b828203905092915050565b600081519050919050565b600081905092915050565b60005b83811015610c9e578082015181840152602081019050610c83565b83811115610cad576000848401525b50505050565b6000610cbe82610c6a565b610cc88185610c75565b9350610cd8818560208601610c80565b80840191505092915050565b6000610cf08284610cb3565b915081905092915050565b7f696e76616c69642063616c6c6572210000000000000000000000000000000000600082015250565b6000610d31600f83610b8a565b9150610d3c82610cfb565b602082019050919050565b60006020820190508181036000830152610d6081610d24565b9050919050565b6000610d7282610832565b9150610d7d83610832565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610db257610db1610c07565b5b828201905092915050565b7f6163636f756e7420616c72656164792065786973747321000000000000000000600082015250565b6000610df3601783610b8a565b9150610dfe82610dbd565b602082019050919050565b60006020820190508181036000830152610e2281610de6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e7057607f821691505b60208210811415610e8457610e83610e29565b5b5091905056fea26469706673582212202838a4ec56a53d95ca81f5bcc928971952f874483db5f07e66617519cd6393ef64736f6c63430008090033';

    // create the transaction object
    const txObject = {
        nonce: web3.utils.toHex(txCount),
        gasLimit: web3.utils.toHex(1000000),
        gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),
        data: data
    };

    // sign the transaction
    const tx = new Tx(txObject, { 'chain': 'ropsten' });
    tx.sign(privateKey1);

    // serialize the transaction
    const serializedTx = tx.serialize();
    const raw = '0x' + serializedTx.toString('hex');

    // broadcast the transaction
    web3.eth.sendSignedTransaction(raw, (err, txHash) => {
        console.log('err:', err, 'txHash:', txHash);
    });
});